/*
Appwrite

Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)

The version of the OpenAPI document: 1.5.0
Contact: team@appwrite.io

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * AttributeRelationship
 * @export
 * @interface AttributeRelationship
 */
export interface AttributeRelationship {
    /**
     * Attribute Key.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'key': string;
    /**
     * Attribute type.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'type': string;
    /**
     * Attribute status. Possible values: `available`, `processing`, `deleting`, `stuck`, or `failed`
     * @type {string}
     * @memberof AttributeRelationship
     */
    'status': string;
    /**
     * Error message. Displays error generated on failure of creating or deleting an attribute.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'error': string;
    /**
     * Is attribute required?
     * @type {boolean}
     * @memberof AttributeRelationship
     */
    'required': boolean;
    /**
     * Is attribute an array?
     * @type {boolean}
     * @memberof AttributeRelationship
     */
    'array'?: boolean | null;
    /**
     * The ID of the related collection.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'relatedCollection': string;
    /**
     * The type of the relationship.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'relationType': string;
    /**
     * Is the relationship two-way?
     * @type {boolean}
     * @memberof AttributeRelationship
     */
    'twoWay': boolean;
    /**
     * The key of the two-way relationship.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'twoWayKey': string;
    /**
     * How deleting the parent document will propagate to child documents.
     * @type {string}
     * @memberof AttributeRelationship
     */
    'onDelete': string;
    /**
     * Whether this is the parent or child side of the relationship
     * @type {string}
     * @memberof AttributeRelationship
     */
    'side': string;
}

