/*
Appwrite

Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)

The version of the OpenAPI document: 1.5.0
Contact: team@appwrite.io

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface FunctionsCreateNewFunctionRequest
 */
export interface FunctionsCreateNewFunctionRequest {
    /**
     * Function ID. Choose a custom ID or generate a random ID with `ID.unique()`. Valid chars are a-z, A-Z, 0-9, period, hyphen, and underscore. Can\'t start with a special char. Max length is 36 chars.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'functionId': string;
    /**
     * Function name. Max length: 128 chars.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'name': string;
    /**
     * Execution runtime.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'runtime': FunctionsCreateNewFunctionRequestRuntimeEnum;
    /**
     * An array of role strings with execution permissions. By default no user is granted with any execute permissions. [learn more about roles](https://appwrite.io/docs/permissions#permission-roles). Maximum of 100 roles are allowed, each 64 characters long.
     * @type {Array<string>}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'execute'?: Array<string>;
    /**
     * Events list. Maximum of 100 events are allowed.
     * @type {Array<string>}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'events'?: Array<string>;
    /**
     * Schedule CRON syntax.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'schedule'?: string;
    /**
     * Function maximum execution time in seconds.
     * @type {number}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'timeout'?: number;
    /**
     * Is function enabled? When set to \'disabled\', users cannot access the function but Server SDKs with and API key can still access the function. No data is lost when this is toggled.
     * @type {boolean}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'enabled'?: boolean;
    /**
     * Whether executions will be logged. When set to false, executions will not be logged, but will reduce resource used by your Appwrite project.
     * @type {boolean}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'logging'?: boolean;
    /**
     * Entrypoint File. This path is relative to the \"providerRootDirectory\".
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'entrypoint'?: string;
    /**
     * Build Commands.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'commands'?: string;
    /**
     * Appwrite Installation ID for VCS (Version Control System) deployment.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'installationId'?: string;
    /**
     * Repository ID of the repo linked to the function.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'providerRepositoryId'?: string;
    /**
     * Production branch for the repo linked to the function.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'providerBranch'?: string;
    /**
     * Is the VCS (Version Control System) connection in silent mode for the repo linked to the function? In silent mode, comments will not be made on commits and pull requests.
     * @type {boolean}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'providerSilentMode'?: boolean;
    /**
     * Path to function code in the linked repo.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'providerRootDirectory'?: string;
    /**
     * Repository name of the template.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'templateRepository'?: string;
    /**
     * The name of the owner of the template.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'templateOwner'?: string;
    /**
     * Path to function code in the template repo.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'templateRootDirectory'?: string;
    /**
     * Production branch for the repo linked to the function template.
     * @type {string}
     * @memberof FunctionsCreateNewFunctionRequest
     */
    'templateBranch'?: string;
}

type FunctionsCreateNewFunctionRequestRuntimeEnum = 'node-14.5' | 'node-16.0' | 'node-18.0' | 'node-19.0' | 'node-20.0' | 'node-21.0' | 'php-8.0' | 'php-8.1' | 'php-8.2' | 'php-8.3' | 'ruby-3.0' | 'ruby-3.1' | 'ruby-3.2' | 'ruby-3.3' | 'python-3.8' | 'python-3.9' | 'python-3.10' | 'python-3.11' | 'python-3.12' | 'deno-1.40' | 'dart-2.15' | 'dart-2.16' | 'dart-2.17' | 'dart-2.18' | 'dart-3.0' | 'dart-3.1' | 'dart-3.3' | 'dotnet-3.1' | 'dotnet-6.0' | 'dotnet-7.0' | 'java-8.0' | 'java-11.0' | 'java-17.0' | 'java-18.0' | 'java-21.0' | 'swift-5.5' | 'swift-5.8' | 'swift-5.9' | 'kotlin-1.6' | 'kotlin-1.8' | 'kotlin-1.9' | 'cpp-17' | 'cpp-20' | 'bun-1.0'


